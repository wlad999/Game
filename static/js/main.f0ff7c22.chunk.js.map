{"version":3,"sources":["services/squareService.js","component/gameField/gameSquare/index.js","component/gameField/control/index.js","component/gameField/index.js","services/controlService.js","component/leaderBoard/index.js","App.js","index.js"],"names":["defaultArrCreator","count","Array","fill","map","_","lineIdx","squareIdx","id","color","oneLineArr","squareCreationFunc","squareData","setSquareData","setWinner","compWin","playerWin","totalNumber","line","style","display","justifyContent","el","width","height","outline","background","cursor","onClick","newSquareData","clickHandler","shortid","playFunc","randomNum","delay","idTimeOut","setIdTimeOut","num","tryNum","Math","ceil","random","length","randomNumCreator","setTimeout","clearTimeout","GameSquare","currentMode","play","useState","mode","setMode","idIntarval","setIdIntarval","showSquare","setShowSquare","useEffect","squareArr","field","clearInterval","square","setInterval","Control","renderMode","setPlayToggle","winner","name","setName","className","placeholder","value","onChange","e","GameField","gameMode","setLeaderList","level","easyMode","setCurrentMode","setPlay","data","newDate","Date","dateString","toLocaleTimeString","slice","toLocaleDateString","toLocaleString","month","getFullYear","date","dataToSendFunc","fetch","method","headers","body","JSON","stringify","then","json","catch","console","log","selectMode","modeList","Object","keys","target","disabled","selectModeFunc","LeaderBoard","list","defaultMode","normalMode","hardMode","App","setGameMode","leaderList","leadersList","reverse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0ff7c22.chunk.js","sourcesContent":["import shortid from \"shortid\";\n\nexport function defaultArrCreator(count) {\n  const oneLineArr = (lineIdx) =>\n    new Array(count).fill().map((_, squareIdx) => ({\n      id: lineIdx * count + 1 + squareIdx,\n      color: null,\n    }));\n\n  return new Array(count).fill().map((_, lineIdx) => oneLineArr(lineIdx));\n}\n\nexport function squareCreationFunc({\n  squareData,\n  setSquareData,\n  count,\n  setWinner,\n}) {\n  let compWin = 0;\n  let playerWin = 0;\n  let totalNumber = count * count;\n  let winner = null;\n\n  return squareData.map((line) => {\n    return (\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n        key={shortid()}\n      >\n        {line.map((el) => {\n          if (el.color === \"#00E871\") {\n            playerWin = playerWin + 1;\n          }\n          if (el.color === \"#E85A5F\") {\n            compWin = compWin + 1;\n          }\n          if (playerWin / totalNumber > 0.5) {\n            winner = \"User\";\n            setWinner(winner);\n          }\n          if (compWin / totalNumber > 0.5) {\n            winner = \"Computer\";\n            setWinner(winner);\n          }\n\n          return (\n            <div\n              style={{\n                width: `calc(36vw/${count})`,\n                height: `calc(36vw/${count})`,\n                outline: \"2px solid #EFEFF1\",\n                background: `${el.color}`,\n                cursor: \"pointer\",\n              }}\n              key={shortid()}\n              onClick={() =>\n                clickHandler({ id: el.id, squareData, setSquareData })\n              }\n            >\n              {el.id}\n            </div>\n          );\n        })}\n      </div>\n    );\n  });\n}\n\nexport function clickHandler({ id, squareData, setSquareData }) {\n  const newSquareData = squareData.map((line) =>\n    line.map((el) => {\n      if (el.id === id && el.color === \"#42D8E8\") {\n        return { ...el, color: \"#00E871\" };\n      }\n      return el;\n    })\n  );\n  setSquareData(newSquareData);\n}\n\nexport function randomNumCreator({ squareData, count }) {\n  let num;\n  while (!num && squareData.length) {\n    let tryNum = Math.ceil(Math.random() * (count * count));\n\n    squareData.map((line) =>\n      line.map((el) => {\n        if (el.id === tryNum && !el.color) {\n          num = tryNum;\n        }\n      })\n    );\n  }\n\n  return num;\n}\n\nexport function playFunc({\n  count,\n  setSquareData,\n  delay,\n  idTimeOut,\n  setIdTimeOut,\n}) {\n  let randomNum;\n  setSquareData((squareData) => {\n    randomNum = randomNumCreator({ squareData, count });\n\n    //console.log(\"randomNum\", randomNum);\n    return squareData.map((line) =>\n      line.map((el) => {\n        if (el.id === randomNum) {\n          //console.log(\"el\", el.id);\n          return { ...el, color: \"#42D8E8\" };\n        }\n        return el;\n      })\n    );\n  });\n  setIdTimeOut(\n    setTimeout(() => {\n      setSquareData((squareData) =>\n        squareData.map((line) =>\n          line.map((el) => {\n            if (el.id === randomNum && el.color === \"#42D8E8\") {\n              return { ...el, color: \"#E85A5F\" };\n            }\n            return el;\n          })\n        )\n      );\n      clearTimeout(idTimeOut);\n    }, delay)\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  defaultArrCreator,\n  squareCreationFunc,\n  playFunc,\n} from \"../../../services\";\n\nconst GameSquare = ({ currentMode, play, setWinner }) => {\n  const [mode, setMode] = useState(currentMode);\n  const [squareData, setSquareData] = useState([]);\n  const [idIntarval, setIdIntarval] = useState(null);\n  const [idTimeOut, setIdTimeOut] = useState(null);\n  const [showSquare, setShowSquare] = useState(null);\n\n  useEffect(() => {\n    setMode(currentMode);\n  }, [currentMode]);\n\n  useEffect(() => {\n    const squareArr = defaultArrCreator(mode.field);\n    setSquareData(squareArr);\n    clearTimeout(idTimeOut);\n    clearInterval(idIntarval);\n  }, [mode]);\n\n  useEffect(() => {\n    const square = squareCreationFunc({\n      squareData,\n      setSquareData,\n      count: mode.field,\n      setWinner,\n    });\n    setShowSquare(square);\n  }, [squareData]);\n\n  useEffect(() => {\n    if (!play) {\n      clearInterval(idIntarval);\n      clearTimeout(idTimeOut);\n    }\n    if (play) {\n      setWinner(null);\n      const squareArr = defaultArrCreator(mode.field);\n      setSquareData(squareArr);\n    }\n\n    play &&\n      setIdIntarval(\n        setInterval(playFunc, mode.delay, {\n          count: mode.field,\n          setSquareData,\n          delay: mode.delay,\n          idTimeOut,\n          setIdTimeOut,\n        })\n      );\n  }, [play]);\n\n  return <div>{showSquare}</div>;\n};\n\nexport default GameSquare;\n","import React from \"react\";\nimport \"./index.css\";\n\nconst Control = ({\n  renderMode,\n  setPlayToggle,\n  play,\n  winner,\n  name,\n  setName,\n}) => {\n  return (\n    <>\n      <div className=\"control\">\n        <div className=\"modeList\">{renderMode}</div>\n        <input\n          placeholder=\"Enter your name\"\n          value={name}\n          onChange={(e) => setName(e)}\n        />\n        <button onClick={setPlayToggle}>\n          {play && !winner ? \"STOP\" : !play && !winner ? \"PLAY\" : \"PLAY AGAIN\"}\n        </button>\n      </div>\n      {winner && <h2>{name ? name : winner} won</h2>}\n    </>\n  );\n};\n\nexport default Control;\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport GameSquare from \"./gameSquare\";\nimport Control from \"./control\";\nimport { dataToSendFunc, selectModeFunc } from \"../../services\";\n\nconst GameField = ({ gameMode, setLeaderList }) => {\n  const [currentMode, setCurrentMode] = useState({\n    level: \"easyMode\",\n    ...gameMode.easyMode,\n  });\n  const [name, setName] = useState(\"\");\n  const [play, setPlay] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  useEffect(() => {\n    winner && setPlay(false);\n\n    const data = dataToSendFunc({ winner, name });\n\n    winner &&\n      fetch(\"https://starnavi-frontend-test-task.herokuapp.com/winners\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((data) => data.json())\n        .then((data) => setLeaderList(data))\n        .catch(console.log(\"Some problem with getting leaders list\"));\n  }, [winner]);\n\n  const setPropsPlay = () => {\n    setPlay((play) => !play);\n  };\n  const setPlayerName = (e) => {\n    if (play || winner) {\n      return null;\n    }\n    return setName(e.target.value);\n  };\n\n  const selectMode = selectModeFunc({ gameMode, setCurrentMode });\n\n  return (\n    <div className=\"gameFieldContainer\">\n      <Control\n        renderMode={selectMode}\n        setPlayToggle={setPropsPlay}\n        play={play}\n        winner={winner}\n        name={name}\n        setName={setPlayerName}\n      />\n      <GameSquare currentMode={currentMode} play={play} setWinner={setWinner} />\n    </div>\n  );\n};\n\nexport default GameField;\n","import shortid from \"shortid\";\n\nexport function dataToSendFunc({ winner, name }) {\n  const newDate = new Date();\n  const dateString = `${newDate\n    .toLocaleTimeString()\n    .slice(0, -3)}; ${newDate\n    .toLocaleDateString()\n    .slice(0, -8)} ${newDate.toLocaleString(\"en\", {\n    month: \"long\",\n  })} ${newDate.getFullYear()}`;\n\n  const data = {\n    winner: name ? name.slice(0, 12) : winner,\n    date: dateString,\n  };\n  return data;\n}\n\nexport function selectModeFunc({ gameMode, setCurrentMode }) {\n  const modeList = Object.keys(gameMode);\n\n  const renderMode = (\n    <select\n      id=\"select\"\n      value=\"Pick game mode\"\n      onChange={(e) =>\n        setCurrentMode({\n          level: e.target.value,\n          ...gameMode[e.target.value],\n        })\n      }\n    >\n      <option disabled style={{ display: \"none\" }}>\n        Pick game mode\n      </option>\n      {modeList.map((level) => {\n        return (\n          <option value={level} key={shortid()}>\n            {level}\n          </option>\n        );\n      })}\n    </select>\n  );\n  return renderMode;\n}\n","import React from \"react\";\nimport \"./index.css\";\n\nconst LeaderBoard = ({ list }) => {\n  return (\n    <div className=\"leaderFieldContainer\">\n      <span>Leader Board</span>\n      <ul>{list ? list : \"Some problem with getting leaders list\"}</ul>\n    </div>\n  );\n};\n\nexport default LeaderBoard;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport GameField from \"./component/gameField\";\nimport LeaderBoard from \"./component/leaderBoard\";\nimport shortid from \"shortid\";\n\nconst defaultMode = {\n  easyMode: { field: 5, delay: 2000 },\n  normalMode: { field: 10, delay: 1000 },\n  hardMode: { field: 15, delay: 900 },\n};\n\nfunction App() {\n  const [gameMode, setGameMode] = useState(defaultMode);\n  const [leaderList, setLeaderList] = useState([]);\n  useEffect(() => {\n    fetch(\"https://starnavi-frontend-test-task.herokuapp.com/winners\")\n      .then((data) => data.json())\n      .then((json) => setLeaderList(json))\n      .catch(console.log(\"Some problem with getting leaders list\"));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://starnavi-frontend-test-task.herokuapp.com/game-settings\")\n      .then((data) => data.json())\n      .then((json) => setGameMode(json))\n      .catch(setGameMode(defaultMode));\n  }, []);\n\n  const leadersList =\n    leaderList.length &&\n    [...leaderList].reverse().map((el) => (\n      <li key={shortid()} className=\"line\">\n        <span className=\"winner\">{el.winner}</span>\n        {el.date}\n      </li>\n    ));\n\n  return (\n    <div className=\"App\">\n      <GameField gameMode={gameMode} setLeaderList={setLeaderList} />\n      <LeaderBoard list={leadersList} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}